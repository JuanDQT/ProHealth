apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'realm-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

// Como importar modulos: https://stackoverflow.com/a/41764425
// https://stackoverflow.com/questions/68636809/cant-import-module-in-android-studio-arctic-fox
// https://stackoverflow.com/questions/48399052/could-not-find-method-include-product

android {
    compileSdkVersion 30
    defaultConfig {
        applicationId "com.juan.prohealth"
        versionCode 1901222005
        versionName "1.0.0"
        minSdkVersion 22
        targetSdkVersion 30
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        // More info about rename app result: https://medium.com/@giorgos.neokleous93/name-your-apk-aab-files-3cf3d123a48c
        setProperty("archivesBaseName", "Coagutest")
    }
    buildTypes {

        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // More info: https://www.youtube.com/watch?v=mBoNVTjMAtA
    flavorDimensions "default"
    productFlavors {
        staging {
            applicationId 'com.juan.prohealth.staging'
            resValue 'string', 'app_name', 'Staging-Coagutest'
            buildConfigField 'String', 'URL_SERVER', '"http://www.staging.server.com"'
            manifestPlaceholders = [
                    appIcon: "@mipmap/ic_launcher_staging",
                    appIconRound: "@mipmap/ic_launcher_round_staging"
            ]
            dimension "default"
        }

        production {
            applicationId 'com.juan.prohealth'
            resValue 'string', 'app_name', 'Coagutest'
            buildConfigField 'String', 'URL_SERVER', '"http://www.production.server.com"'
            manifestPlaceholders = [
                    appIcon: "@mipmap/ic_launcher",
                    appIconRound: "@mipmap/ic_launcher_round"
            ]
            dimension 'default'
        }
    }

    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.gtomato.android.library:carouselview:2.0.1'
    implementation 'com.github.LucasFsc:Html2Pdf:0.2-beta'
    implementation 'androidx.cardview:cardview:1.0.0'

    implementation 'com.amitshekhar.android:android-networking:1.0.1'
    implementation 'com.andrognito.flashbar:flashbar:1.0.3'
    implementation 'androidx.work:work-runtime-ktx:2.5.0'
    implementation 'com.google.firebase:firebase-crashlytics:17.4.1'

    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'

    implementation project(path: ':anychart')
    implementation project(path: ':eventscalendar')

    implementation 'com.karumi:dexter:6.0.2'

    def room_version = "2.3.0"
    implementation "androidx.room:room-runtime:$room_version"
    //To use Kotlin annotation processing tool (kapt)
    kapt "androidx.room:room-compiler:$room_version"
    //Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"
}
